[{"path":"https://rettopnivek.github.io/ddabcd/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kevin Potter. Author, maintainer.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Potter, K. (2023). ddabcd: Delay discounting models ABCD study (Version 1.0.0) [Computer software]. https://rettopnivek.github.io/ddabcd/","code":"@Misc{,   title = {ddabcd: Delay Discounting Models for the ABCD study},   author = {Kevin Potter},   year = {2023},   version = {1.0.2},   url = {https://rettopnivek.github.io/ddabcd/}, }"},{"path":"https://rettopnivek.github.io/ddabcd/index.html","id":"functions-for-processing-and-modeling-delay-discounting-data-from-the-abcd-study","dir":"","previous_headings":"","what":"Functions for Processing and Modeling Delay Discounting Data From the ABCD Study","title":"Delay Discounting Models for the ABCD study","text":"R package ddabcd provides collection functions help researchers extract, clean, model data delay discounting task used Adolescent Brain Cognitive Development (ABCD) Study®.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/index.html","id":"table-of-contents","dir":"","previous_headings":"Functions for Processing and Modeling Delay Discounting Data From the ABCD Study","what":"Table of contents","title":"Delay Discounting Models for the ABCD study","text":"Prerequisites Installation delay discounting task Usage References","code":""},{"path":"https://rettopnivek.github.io/ddabcd/index.html","id":"section01","dir":"","previous_headings":"Functions for Processing and Modeling Delay Discounting Data From the ABCD Study","what":"Prerequisites","title":"Delay Discounting Models for the ABCD study","text":"R (version >= 4.2.1) tidyr (version >= 1.2.0) bbmle (version >= 1.0.25) easy installation recommended devtools (version >= 2.4.3)","code":""},{"path":"https://rettopnivek.github.io/ddabcd/index.html","id":"section02","dir":"","previous_headings":"Functions for Processing and Modeling Delay Discounting Data From the ABCD Study","what":"Installation","title":"Delay Discounting Models for the ABCD study","text":"","code":"# Install development version from Github devtools::install_github(\"rettopnivek/ddabcd\")"},{"path":"https://rettopnivek.github.io/ddabcd/index.html","id":"section03","dir":"","previous_headings":"Functions for Processing and Modeling Delay Discounting Data From the ABCD Study","what":"The delay discounting task","title":"Delay Discounting Models for the ABCD study","text":"Details delay discounting task used ABCD study provided Luciana et al. (2018). brief, ABCD study assessed delay discounting via task using adjusting-delay procedure. trial task, participants chose two hypothetical rewards: reward $100 delay immediate reward varying magnitudes. magnitude immediate reward automatically adjusted trials given block based participant’s previous response. Participants completed total 42 trials 7 randomized blocks (6 trials per block), block corresponded different delay interval future reward $100. Delay intervals future $100 : 6 hours, 1 day, 1 week, 1 month, 3 months, 1 year, 5 years. delay interval, indifference score calculated. indifference score represents much $100 reward worth following given delay. indifference score can thought proportion immediate reward worth following delay. Indifference scores ABCD study varied 99.21875 0.78125. Participants also completed 3 validity questions blocks. Participants chose $100 now versus $100 following delay (e.g., 5 years), rational choice always immediate amount. Failure pick rational choice 3 questions taken indicate inattentive behavior.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/index.html","id":"section04","dir":"","previous_headings":"Functions for Processing and Modeling Delay Discounting Data From the ABCD Study","what":"Usage","title":"Delay Discounting Models for the ABCD study","text":"installation package can loaded via standard library call: package comes simulated data similar format data provided ABCD study. Note direct access ABCD data requires approval NDA Data Access Committee. See Saragosa-Harris et al. (2022) advice using data ABCD study. ABCD study data primarily formatted separate rows per participant time point multiple columns indifference scores computed different delay durations. data can converted long-form data (separate rows indifference score delay duration). addition conversion, useful quality checks computed. Indicators provided non-missing data, validity checks irrational responding, whether data met criteria Johnson & Bickel (2008), whether one-sided Mann-Kendall test monotonicity statistically significant. data converted long-form, 3 different models discounting can fit set data per participant. Models fit (1) null model intercept , (2) Mazur’s one-parameter (1987) model, (3) Rachlin’s two-parameter (2006) model. Parameter estimates per participant can added column existing data frame allow easy analysis variables covary discounting model parameters. functions examples expand upon original work Kohler, Lichenstein, Yip (2022), described fit Mazur’s (1987) model ABCD study data using base R function nls reported analyses demographic, impulsivity, substance use risk factor measures covary discounting rate parameter.","code":"library(ddabcd) # Example wide-form data set with simulated indifference scores data(ddabcd_data_example_wide) # Use data from 1st time point dtf_wide <- ddabcd_data_example_wide %index%    list( '1_year_follow_up_y_arm_1', 'eventnames' ) dtf_long <- ddabcd_data_prep(dtf_wide) # Fit data using non-linear least-squares method lst_all_fits.nls <- ddabcd_fit_models_across_participants(   dtf_long,   ddabcd_fit_models_using_nls ) # Add discounting rate estimates from Mazur's (1987) model dtf_wide <- ddabcd_post_fit_add_to_data(    dtf_wide,    lst_all_fits.nls,    'ddabcd_estimates_M1987_nls.lnk',   fun_extract = function(x) x %pull_coef% 'lnk',   chr_model = 'M1987',   lgc_filtering = dtf_wide$eventname == '1_year_follow_up_y_arm_1' )  # Add discounting rate estimates from Rachlin's (2006) model dtf_wide <- ddabcd_post_fit_add_to_data(    dtf_wide,    lst_all_fits.nls,    'ddabcd_estimates_R2006_nls.lnk',   fun_extract = function(x) x %pull_coef% 'lnk',   chr_model = 'R2006',   lgc_filtering = dtf_wide$eventname == '1_year_follow_up_y_arm_1' )  # Predict discounting rates using biological sex lst_pred_of_lnk <-    lm( ddabcd_estimates_M1987_nls.lnk ~ sex, data = dtf_wide )"},{"path":"https://rettopnivek.github.io/ddabcd/index.html","id":"REF","dir":"","previous_headings":"Functions for Processing and Modeling Delay Discounting Data From the ABCD Study","what":"References","title":"Delay Discounting Models for the ABCD study","text":"Johnson, M. W., & Bickel, W. K. (2008). algorithm identifying nonsystematic delay-discounting data. Experimental Clinical Psychopharmacology, 16 (3), 264-274. https://doi.org/10.1037/1064-1297.16.3.264 Kohler, R. J., Lichenstein, S. D., & Yip, S. W. (2022). Hyperbolic discounting rates risk problematic alcohol use youth enrolled Adolescent Brain Cognitive Development Study. Addiction Biology, 27 (2), 1-13. https://doi.org/10.1111/adb.13160 Luciana, M., Bjork, J., Nagel, B., Barch, D. M., Gonzalex, R., Nixon, S. J., & Banich, M. T. (2018). Adolescent neurocognitive development impacts substance use: Overview Adolescent Brain Cognitive Development (ABCD) baseline neurocognition battery. Developmental Cognitive Neuroscience, 32, 67-79. https://doi.org/10.1016/j.dcn.2018.02.006 Mazur, J. E. (1987). adjusting procedure studying delayed reinforcement]. M. L. Commons, J. E. Mazur, J. . Nevin, & H. Rachlin (Eds.), effect delay intervening events reinforcement value (pp. 55-73). Lawrence Erlbaum Associates, Inc. Rachlin, H. (2006). Notes discounting. Journal Experimental Analysis Behavior, 85 (3), 425-435. https://doi.org/10.1901/jeab.2006.85-05 Saragosa-Harris, N. M., Chaku, N., MacSweeney, N., Williamson, V. G., Scheuplein, M., Feola, B., …, & Mills, K. L. (2022). practical guide researchers reviewers using ABCD Study large longitudinal datasets. Developmental Cognitive Neuroscience, 55, 1-11. https://doi.org/10.1016/j.dcn.2022.101115","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/dbetamp.html","id":null,"dir":"Reference","previous_headings":"","what":"The Beta Distribution Using Mean and Precision — dbetamp","title":"The Beta Distribution Using Mean and Precision — dbetamp","text":"Density, distribution function, quantile function, random generation beta distribution mean equal mean precision equal prec (lower values correspond higher variance).","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/dbetamp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Beta Distribution Using Mean and Precision — dbetamp","text":"","code":"dbetamp(x, mean, prec, log = FALSE)  pbetamp(q, mean, prec, lower.tail = TRUE, log.p = FALSE)  qbetamp(p, mean, prec, lower.tail = TRUE, log.p = FALSE)  rbetamp(n, mean, prec)"},{"path":"https://rettopnivek.github.io/ddabcd/reference/dbetamp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Beta Distribution Using Mean and Precision — dbetamp","text":"x, q Vector quantiles (0 >= x,q <= 1). mean Vector means beta distribution, 0 > mean > 1. prec Vector dispersion parameters beta distribution, prec > 0. log, log.p Logical; TRUE, probabilities p given log(p). lower.tail Logical; TRUE (default), probabilities P(X less equal x) otherwise, P(X greater x). p Vector probabilities n Number observations. length(n) > 1, length taken number required.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/dbetamp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Beta Distribution Using Mean and Precision — dbetamp","text":"dbetamp gives density, pbetamp gives distribution function, qbetamp gives quantile function, rbetamp generates random deviates. length result determined n rbetamp, maximum lengths numerical arguments functions.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/dbetamp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Beta Distribution Using Mean and Precision — dbetamp","text":"mean precision beta distribution can converted back standard positive shape parameters via shape1 = mean x prec shape2 = (1-mean) x prec. See stats::dbeta details.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/dbetamp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Beta Distribution Using Mean and Precision — dbetamp","text":"","code":"x <- c(.25, .5, .75) dbetamp( x, .5, 4) #> [1] 1.125 1.500 1.125 # Same as 'dbeta' function dbetamp( x, .5, 4) == dbeta( x, 2, 2) #> [1] TRUE TRUE TRUE pbetamp( x, .5, 4) #> [1] 0.15625 0.50000 0.84375 qbetamp( pbetamp( x, .5, 4), .5, 4) #> [1] 0.25 0.50 0.75 rbeta( 3, .5, 4) #> [1] 0.1850508 0.3671795 0.2288880"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Delay Discounting Models for the ABCD study — ddabcd-package","title":"Delay Discounting Models for the ABCD study — ddabcd-package","text":"ddabcd package provides assorted functions help processing modeling delay discounting data collected ABCD study. See https://rettopnivek.github.io/ddabcd/ details.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_data_censor.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to Left and Right-Censor Data — ddabcd_data_censor","title":"Function to Left and Right-Censor Data — ddabcd_data_censor","text":"Function left right-censor numeric values column data frame.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_data_censor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to Left and Right-Censor Data — ddabcd_data_censor","text":"","code":"ddabcd_data_censor(   obj_data,   chr_outcome = \"ddabcd_indifference_score_1\",   lgc_indicator = FALSE,   num_limits = c(0.78125, 99.21875),   num_scaling = 100 )"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_data_censor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to Left and Right-Censor Data — ddabcd_data_censor","text":"obj_data Either vector values data frame. chr_outcome optional character string, column obj_data left right-censor obj_data data frame. lgc_indicator Logical; TRUE returns indicator whether values censored (-1 left-censored, 1 right-censored, 0 otherwise) rather censored data . num_limits numeric vector lower upper limits censor values, respectively. default set lowest highest possible indifference scores found ABCD study data set. num_scaling numeric value, scaling constant adjust numeric values (useful, instance, data range 0 - 1 limits range 0 - 100).","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_data_censor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to Left and Right-Censor Data — ddabcd_data_censor","text":"Either numeric vector censored value, lgc_indicator TRUE, integer vector values -1 left-censored data, 1 right-censored data, 0 otherwise. obj_data NULL, returns default limits used ABCD study.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_data_censor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to Left and Right-Censor Data — ddabcd_data_censor","text":"","code":"# Example data set dtf_data <-   data.frame( ddabcd_indifference_score_1 = c( 0, 1, .5 ) )  # Indicator for censored values ddabcd_data_censor( dtf_data, lgc_indicator = TRUE ) #> [1] -1  1  0 # Censored values ddabcd_data_censor( dtf_data ) #> [1] 0.0078125 0.9921875 0.5000000  # Vector of values ddabcd_data_censor(   c(-5, 0, 5) %transform% 'logistic', chr_outcome = '' ) #> [1] 0.0078125 0.5000000 0.9921875"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_data_default_col.html","id":null,"dir":"Reference","previous_headings":"","what":"Default Column Names for ABCD Study Delay Discounting Data — ddabcd_data_default_col","title":"Default Column Names for ABCD Study Delay Discounting Data — ddabcd_data_default_col","text":"Convenience function returns default column names used ABCD study ddabcd package delay discounting variables.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_data_default_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default Column Names for ABCD Study Delay Discounting Data — ddabcd_data_default_col","text":"","code":"ddabcd_data_default_col(lgc_long = TRUE)"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_data_default_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default Column Names for ABCD Study Delay Discounting Data — ddabcd_data_default_col","text":"lgc_long Logical; TRUE returns column names long-form data set, otherwise returns column names wide-form data set.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_data_default_col.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default Column Names for ABCD Study Delay Discounting Data — ddabcd_data_default_col","text":"character vector.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_data_delay_durations.html","id":null,"dir":"Reference","previous_headings":"","what":"Delay Durations for the ABCD Study Delay Discounting Task — ddabcd_data_delay_durations","title":"Delay Durations for the ABCD Study Delay Discounting Task — ddabcd_data_delay_durations","text":"Convenience function returns 7 delay durations order used ABCD study.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_data_delay_durations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delay Durations for the ABCD Study Delay Discounting Task — ddabcd_data_delay_durations","text":"","code":"ddabcd_data_delay_durations(chr_units = \"log months\")"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_data_delay_durations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delay Durations for the ABCD Study Delay Discounting Task — ddabcd_data_delay_durations","text":"chr_units character string, either 'months' 'log months', units delay durations.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_data_delay_durations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delay Durations for the ABCD Study Delay Discounting Task — ddabcd_data_delay_durations","text":"numeric vector.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_data_example_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Long-Form Data — ddabcd_data_example_long","title":"Example Long-Form Data — ddabcd_data_example_long","text":"example data set simulated indifference scores 48 participants two time points separate rows delay duration, time point, participant. Data result application ddabcd_data_prep function ddabcd_data_example_wide data set. Values simulated Rachlin's (2006) model data following logit-normal distribution. generating log discounting rate sensitivity parameters specified weakly correlated biological sex.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_data_example_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Long-Form Data — ddabcd_data_example_long","text":"","code":"ddabcd_data_example_long"},{"path":[]},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_data_example_long.html","id":"ddabcd-data-example-long","dir":"Reference","previous_headings":"","what":"ddabcd_data_example_long","title":"Example Long-Form Data — ddabcd_data_example_long","text":"data frame 672 rows 21 columns: src_subject_id Participant ID eventname Study time point age Participant age months sex Biological sex birth participant ddis_scr_val_immedcho Count times participant picked rational immediate choice 3 validity check questions ddis_scr_val_immedcho Count times participant picked rational immediate choice 3 validity check questions ddabcd_simulation_lnk generating parameter value participant (log discounting rate) ddabcd_simulation_s generating parameter value participant (sensitivity) ddabcd_simulation_lnd generating parameter value participant (log standard deviation logit-normal distribution) ddacbd_quality_no_missing_data Indicator non-NA indifference scores ddabcd_quality_picked_rational_immediate_choices Indicator participant picked 3 rational choices validity check questions ddabcd_quality_variation_in_responses Indicator participant indifference score across delay durations ddabcd_quality_met_Johson_and_Bickel_2008_criteria Indicator participant's data met criteria Johnson Bickel (2008) ddabcd_quality_significant_Mann_Kendall_test Indicator participant's data significant one-sided Mann-Kendall test monotonicity ddabcd_delay_columns original column names indifference scores across different delay durations ddabcd_indifference_score_100 Indifference scores ranging 0 - 100 ddabcd_delay_months Delay durations months ddabcd_delay_log_months log months delay durations ddabcd_delay_negative_log_months negative log months delay durations ddabcd_indifference_score_1 Indifference scores ranging 0 - 1 ddabcd_indifference_score_log_odds Indifference scores ranging 0 - 1 converted log-odds ddabcd_indifference_score_censored Indicator indifference score (ranging 0 - 100) left-censored (value fixed minimum 0.78125) score -1, right-censored (value fixed maximum 99.21875) score 1, censored score 0","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_data_example_wide.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Wide-Form Data in Format of ABCD Study — ddabcd_data_example_wide","title":"Example Wide-Form Data in Format of ABCD Study — ddabcd_data_example_wide","text":"example data set simulated indifference scores 48 participants two time points formatted style data ABCD study. Values simulated Rachlin's (2006) model data following logit-normal distribution. generating log discounting rate sensitivity parameters specified weakly correlated biological sex.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_data_example_wide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Wide-Form Data in Format of ABCD Study — ddabcd_data_example_wide","text":"","code":"ddabcd_data_example_wide"},{"path":[]},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_data_example_wide.html","id":"ddabcd-data-example-wide","dir":"Reference","previous_headings":"","what":"ddabcd_data_example_wide","title":"Example Wide-Form Data in Format of ABCD Study — ddabcd_data_example_wide","text":"data frame 96 rows 15 columns: src_subject_id Participant ID eventname Study time point age Participant age months sex Biological sex birth participant ddis_scr_val_indif_pnt_1da Indifference score delay 1 day ddis_scr_val_indif_pnt_1week Indifference score delay 1 day ddis_scr_val_indif_pnt_1mth Indifference score delay 1 month ddis_scr_val_indif_pnt_3mth Indifference score delay 3 months ddis_scr_val_indif_pnt_1yr Indifference score delay 1 year ddis_scr_val_indif_pnt_5yr Indifference score delay 5 years ddis_scr_val_immedcho Count times participant picked rational immediate choice 3 validity check questions ddabcd_simulation_lnk generating parameter value participant (log discounting rate) ddabcd_simulation_s generating parameter value participant (sensitivity) ddabcd_simulation_lnd generating parameter value participant (log standard deviation logit-normal distribution)","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_data_merge_by_id_and_time_point.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Columns to a Data Frame by Participant ID and Time Point — ddabcd_data_merge_by_id_and_time_point","title":"Add Columns to a Data Frame by Participant ID and Time Point — ddabcd_data_merge_by_id_and_time_point","text":"Function add columns one data frame another, matching participants time points shared across data sets. Useful, example, combine different data sets provided ABCD study.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_data_merge_by_id_and_time_point.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Columns to a Data Frame by Participant ID and Time Point — ddabcd_data_merge_by_id_and_time_point","text":"","code":"ddabcd_data_merge_by_id_and_time_point(   dtf_main,   dtf_to_add,   chr_participant = \"src_subject_id\",   chr_time_point = \"eventname\",   num_default = NA )"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_data_merge_by_id_and_time_point.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Columns to a Data Frame by Participant ID and Time Point — ddabcd_data_merge_by_id_and_time_point","text":"dtf_main data frame columns added. dtf_to_add data frame columns taken. chr_participant character string, column participant IDs match . column must exist dtf_main dtf_to_add. chr_time_point optional character string, column time points match . specified, column must exist dtf_main dtf_to_add. num_default default value use missing data.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_data_merge_by_id_and_time_point.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Columns to a Data Frame by Participant ID and Time Point — ddabcd_data_merge_by_id_and_time_point","text":"data frame, dtf_main additional columns.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_data_merge_by_id_and_time_point.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Columns to a Data Frame by Participant ID and Time Point — ddabcd_data_merge_by_id_and_time_point","text":"","code":"# Example data set data(ddabcd_data_example_wide)  # Main data set just has ID and time point dtf_main <- ddabcd_data_example_wide[, 1:2] # Want to add columns for demographics (age and sex) dtf_to_add <- ddabcd_data_example_wide[, 1:4] # Merge only by ID (duplicate values over time points) dtf_main <- ddabcd_data_merge_by_id_and_time_point(   dtf_main, dtf_to_add, chr_time_point = '' ) head( dtf_main, n = 4 ) #>   src_subject_id                eventname age  sex #> 1            P01 1_year_follow_up_y_arm_1 128 Male #> 2            P01 3_year_follow_up_y_arm_1 128 Male #> 3            P02 1_year_follow_up_y_arm_1 120 Male #> 4            P02 3_year_follow_up_y_arm_1 120 Male  # Want to add indifference score at delay of 6 hours # by participant and time point dtf_to_add <- ddabcd_data_example_wide[, c( 1:2, 5)] dtf_main <- ddabcd_data_merge_by_id_and_time_point(   dtf_main, dtf_to_add, chr_time_point = 'eventname' ) head( dtf_main, n = 4 ) #>   src_subject_id                eventname age  sex ddis_scr_val_indif_point_6h #> 1            P01 1_year_follow_up_y_arm_1 128 Male                    85.65881 #> 2            P01 3_year_follow_up_y_arm_1 128 Male                    94.16830 #> 3            P02 1_year_follow_up_y_arm_1 120 Male                    92.87826 #> 4            P02 3_year_follow_up_y_arm_1 120 Male                    97.58264"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_data_prep.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare ABCD Data for Delay Discounting Modeling — ddabcd_data_prep","title":"Prepare ABCD Data for Delay Discounting Modeling — ddabcd_data_prep","text":"Function convert wide-form ABCD data indifference scores delay discounting task long-form data set ready modeling.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_data_prep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare ABCD Data for Delay Discounting Modeling — ddabcd_data_prep","text":"","code":"ddabcd_data_prep(   dtf_data,   chr_columns = \"\",   chr_indifference = \"\",   chr_delay = \"\",   chr_quality = \"\",   num_delay = NULL,   chr_immediate_choice_score = \"\",   num_alpha_for_MK_test = 0.05 )"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_data_prep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare ABCD Data for Delay Discounting Modeling — ddabcd_data_prep","text":"dtf_data data frame one row per time point ABCD participant. chr_columns character vector 7 columns indifference score (ranging 0 - 100) delay duration (order shortest delay longest delay). chr_indifference character vector 4 new column names long-form data set 1) indifference score (0 - 100), 2) indifference score proportion (0 - 1), 3) log-odds indifference score proportion, 4) indicator whether log-odds left right censored (-1 = left, 1 = right, 0 = none). chr_delay character vector 4 new column names long-form data set 1) original column names delay duration, 2) delay duration months, 3) log delay duration months, 4) negative log delay duration months. chr_quality character vector 5 new column names long-form data set indicator non-missing data participant, indicator participants picked 3 rational immediate choice responses delay discounting validity check, 3) indicator participants make response across delay durations, indicator participant data met Johnson & Bickel (2008) criteria valid data, 5) indicator participant data exhibit statistically significant monotonic downward trend based one-sided Mann-Kendall test. num_delay optional numeric vector 7 values use delay duration (order shortest longest). Otherwise defaults duration months delays 6 hours, 1 day, 1 week, 1 month, 3 months, 1 year, 5 years. chr_immediate_choice_score character string column name dtf_data tracking frequency participants chose 3 rational immediate choice responses validity check. num_alpha_for_MK_test proportion, false-positive rate one-sided Mann-Kendall test.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_data_prep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare ABCD Data for Delay Discounting Modeling — ddabcd_data_prep","text":"data frame.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_data_prep.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Prepare ABCD Data for Delay Discounting Modeling — ddabcd_data_prep","text":"Johnson, M. W., & Bickel, W. K. (2008). algorithm identifying nonsystematic delay-discounting data. Experimental Clinical Psychopharmacology, 16 (3), 264 - 274. https://doi.org/10.1037/1064-1297.16.3.264","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_data_prep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare ABCD Data for Delay Discounting Modeling — ddabcd_data_prep","text":"","code":"# Load in example data set data(\"ddabcd_data_example_wide\")  # Process data set dtf_delay <- ddabcd_data_prep(ddabcd_data_example_wide) #> Error in loadNamespace(x): there is no package called ‘Kendall’"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_estimation_priors.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Priors Over Delay Discounting Model Parameters — ddabcd_estimation_priors","title":"Compute Priors Over Delay Discounting Model Parameters — ddabcd_estimation_priors","text":"Function compute priors delay discounting model parameters.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_estimation_priors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Priors Over Delay Discounting Model Parameters — ddabcd_estimation_priors","text":"","code":"ddabcd_estimation_priors(num_param, lst_priors, chr_distribution)"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_estimation_priors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Priors Over Delay Discounting Model Parameters — ddabcd_estimation_priors","text":"num_param numeric named vector parameter values, num_param['a0'] intercept (logit-scale), num_param['lnk'] log discounting, num_param['s'] sensitivity, num_param['lnd'] log dispersion. lst_priors named list vectors specifying mean standard deviation, respectively, prior parameter. chr_distribution character string specifying distribution data. Options 'Normal', 'Beta', 'Logit-normal'.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_estimation_priors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Priors Over Delay Discounting Model Parameters — ddabcd_estimation_priors","text":"numeric value, sum log-likelihoods.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_estimation_priors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Priors Over Delay Discounting Model Parameters — ddabcd_estimation_priors","text":"following parameters given normal priors user-specified means standard deviations: \"a0\"intercept logit-scale \"lnk\"log discounting \"s\"sensitivity \"lnd\"log dispersion interpretation log dispersion parameter depends distribution data. normal logit-normal distributions lower values indicate lower variance, whereas beta distribution, higher values indicate lower variance.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_estimation_priors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Priors Over Delay Discounting Model Parameters — ddabcd_estimation_priors","text":"","code":"# Example normal prior with mean of 0 and # sd of 1 on intercept on logit-scale ddabcd_estimation_priors(   c( a0 = 0 ), lst_priors = list( a0 = c( 0, 1 ) ) ) #> [1] -0.9189385"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_estimation_succeeded.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if Model Estimation Succeeded — ddabcd_estimation_succeeded","title":"Check if Model Estimation Succeeded — ddabcd_estimation_succeeded","text":"Convenience function checks class model fit object. Fail-states model fit result simple character string reporting failure rather complex class results, allowing confirmation success object character string.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_estimation_succeeded.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if Model Estimation Succeeded — ddabcd_estimation_succeeded","text":"","code":"ddabcd_estimation_succeeded(obj_fit)"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_estimation_succeeded.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if Model Estimation Succeeded — ddabcd_estimation_succeeded","text":"obj_fit R object, model fit output.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_estimation_succeeded.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if Model Estimation Succeeded — ddabcd_estimation_succeeded","text":"logical value, TRUE obj_fit character string (indicating successful fit) FALSE otherwise.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_estimation_sum_of_log_likelihoods.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Sum of Log Likelihoods for Delay Discounting Models — ddabcd_estimation_sum_of_log_likelihoods","title":"Compute Sum of Log Likelihoods for Delay Discounting Models — ddabcd_estimation_sum_of_log_likelihoods","text":"Function compute sum log-likelihoods one three delay discounting models: 1) intercept-model, 2) Mazur's (1987) model, 3) Rachlin's (2006) model. Can passed optimization routines like stats::optim bbmle::mle2 conduct maximum likelihood estimation.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_estimation_sum_of_log_likelihoods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Sum of Log Likelihoods for Delay Discounting Models — ddabcd_estimation_sum_of_log_likelihoods","text":"","code":"ddabcd_estimation_sum_of_log_likelihoods(   num_param,   dtf_data,   chr_distribution,   chr_measures = c(\"ddabcd_indifference_score_1\", \"ddabcd_delay_log_months\"),   num_fnscale = -1,   lst_priors = NULL,   fun_priors = NULL )"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_estimation_sum_of_log_likelihoods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Sum of Log Likelihoods for Delay Discounting Models — ddabcd_estimation_sum_of_log_likelihoods","text":"num_param numeric named vector parameter values, num_param['a0'] intercept (logit-scale), num_param['lnk'] log discounting, num_param['s'] sensitivity, num_param['lnd'] log dispersion. dtf_data data frame indifference scores (ranging 0 1) log delay duration. chr_distribution character string, type probability distribution data assumed follow. Options include 'Normal', 'Beta', 'Logit-normal'. chr_measures character vector giving column names dtf_data 1) indifference scores, 2) log delays. num_fnscale numeric value either 1 -1 adjusting sum log-likelihoods (default -1 ensure compatibility functions like bbmle::mle2). lst_priors optional named list hyperparameters priors parameter. fun_prior optional function takes vector parameters list hyperparameters compute prior parameters. Allows penalized maximum likelihood estimation (see ddabcd_estimation_priors).","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_estimation_sum_of_log_likelihoods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Sum of Log Likelihoods for Delay Discounting Models — ddabcd_estimation_sum_of_log_likelihoods","text":"numeric value, sum log-likelihoods adjusted num_fnscale.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_estimation_sum_of_log_likelihoods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Sum of Log Likelihoods for Delay Discounting Models — ddabcd_estimation_sum_of_log_likelihoods","text":"","code":"# Example data set data(ddabcd_data_example_long) # Take data from 1st participant dtf_delay <- ddabcd_data_example_long[1:7, ]  # Intercept-only model # Data follow a normal distribution num_param <- c( a0 = 2.2, lnd = log(.3) ) ddabcd_estimation_sum_of_log_likelihoods(   num_param, dtf_delay, 'Normal' ) #> [1] 0.3193902  # Mazur's (1987) model # Data follow a beta distribution num_param <- c( lnk = log(0.14), lnd = log(4) ) ddabcd_estimation_sum_of_log_likelihoods(   num_param, dtf_delay, 'Beta' ) #> [1] 6.658411  # Rachlin's (2006) model # Data follow a logit-normal distribution num_param <- c( lnk = log(0.14), s = 0.6, lnd = log(4) ) ddabcd_estimation_sum_of_log_likelihoods(   num_param, dtf_delay, 'Logit-normal' ) #> [1] 16.57022"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_estimation_sum_of_log_tobit_likelihoods.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Sum of Log Tobit Likelihoods for Delay Discounting Models — ddabcd_estimation_sum_of_log_tobit_likelihoods","title":"Compute Sum of Log Tobit Likelihoods for Delay Discounting Models — ddabcd_estimation_sum_of_log_tobit_likelihoods","text":"Function compute sum log-likelihoods one three delay discounting models: 1) intercept-model, 2) Mazur's (1987) model, 3) Rachlin's (2006) model. Can passed optimization routines like stats::optim bbmle::mle2 conduct maximum likelihood estimation. outcome required logit scale assumed left right-censored, tobit likelihood function (CITATION) used result.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_estimation_sum_of_log_tobit_likelihoods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Sum of Log Tobit Likelihoods for Delay Discounting Models — ddabcd_estimation_sum_of_log_tobit_likelihoods","text":"","code":"ddabcd_estimation_sum_of_log_tobit_likelihoods(   num_param,   dtf_data,   chr_measures = c(\"ddabcd_indifference_score_log_odds\",     \"ddabcd_delay_negative_log_months\", \"ddabcd_indifference_score_censored\"),   num_limits = NULL,   num_fnscale = -1,   lst_priors = NULL,   fun_priors = NULL )"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_estimation_sum_of_log_tobit_likelihoods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Sum of Log Tobit Likelihoods for Delay Discounting Models — ddabcd_estimation_sum_of_log_tobit_likelihoods","text":"num_param numeric named vector parameter values, num_param['a0'] intercept (logit-scale), num_param['nlnk'] minus log discounting, num_param['s'] sensitivity, num_param['lnd'] log dispersion. dtf_data data frame log-odds indifference scores, minus log delay duration, indicator whether data left-censored (-1), right-censored (1), uncensored (0). chr_measures character vector giving column names dtf_data 1) log-odds indifference scores, 2) minus log delays, 3) censoring indicator. num_fnscale numeric value either 1 -1 adjusting sum log-likelihoods (default -1 ensure compatibility functions like bbmle::mle2). lst_priors optional named list hyperparameters priors parameter. fun_prior optional function takes vector parameters list hyperparameters compute prior parameters. Allows penalized maximum likelihood estimation.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_estimation_sum_of_log_tobit_likelihoods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Sum of Log Tobit Likelihoods for Delay Discounting Models — ddabcd_estimation_sum_of_log_tobit_likelihoods","text":"numeric value, sum log-tobit-likelihoods adjusted num_fnscale.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_estimation_sum_of_log_tobit_likelihoods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Sum of Log Tobit Likelihoods for Delay Discounting Models — ddabcd_estimation_sum_of_log_tobit_likelihoods","text":"","code":"# Examples"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_fit_models_across_participants.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Models Across Participants — ddabcd_fit_models_across_participants","title":"Fit Models Across Participants — ddabcd_fit_models_across_participants","text":"Function fit models separately set data per participant.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_fit_models_across_participants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Models Across Participants — ddabcd_fit_models_across_participants","text":"","code":"ddabcd_fit_models_across_participants(   dtf_data,   fun_to_fit_models,   chr_participant = \"src_subject_id\",   lgc_progress = TRUE,   ... )"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_fit_models_across_participants.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Models Across Participants — ddabcd_fit_models_across_participants","text":"dtf_data data frame separate rows delay duration participant. Must columns indifference scores (ranging 0 1) log delay durations. fun_to_fit_models function fit delay discounting models data (see ddabcd_fit_models_using_nls example). chr_participant character string, column name participant's identifier. lgc_progress Logical; TRUE displays progress bar function run time. ... Additional parameters fun_to_fit_models function.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_fit_models_across_participants.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit Models Across Participants — ddabcd_fit_models_across_participants","text":"list lists, model fit results participant.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_fit_models_across_participants.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Models Across Participants — ddabcd_fit_models_across_participants","text":"","code":"# Example data set data(ddabcd_data_example_long) dtf_delay <- ddabcd_data_example_long %index% list(1, 'eventname')  # Fit models using nls lst_all_fits.nls <- ddabcd_fit_models_across_participants(   dtf_delay, ddabcd_fit_models_using_nls, lgc_progress = FALSE )"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_fit_models_using_mle2.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Delay Discounting Models via Maximum Likelihood — ddabcd_fit_models_using_mle2","title":"Fit Delay Discounting Models via Maximum Likelihood — ddabcd_fit_models_using_mle2","text":"Fits several delay discounting models long-form data set using bbmle::mle2 function 'bbmle' package.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_fit_models_using_mle2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Delay Discounting Models via Maximum Likelihood — ddabcd_fit_models_using_mle2","text":"","code":"ddabcd_fit_models_using_mle2(   dtf_data,   chr_distribution,   chr_outcome = \"ddabcd_indifference_score_1\",   chr_log_delay = \"ddabcd_delay_log_months\",   lst_priors = NULL,   fun_priors = NULL,   lst_start = NULL,   lgc_warnings = FALSE,   ... )"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_fit_models_using_mle2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Delay Discounting Models via Maximum Likelihood — ddabcd_fit_models_using_mle2","text":"dtf_data data frame separate rows delay duration participant. Must column log delay durations. chr_outcome character string, column name indifference scores fit. chr_log_delay character string, column name log delay durations. lst_priors optional named list vectors specifying mean standard deviation, respectively, prior parameter. lst_start named list consisting elements 'Null', 'M1987', 'R2006'. list element named vector starting values parameter estimates ('lnd' models, 'a0' lst_start$Null, 'lnk' lst_start$M1987, 'lnk' 's' lst_start$R2006). lgc_warnings Logical; TRUE displays warning estimations failed. ... Additional parameters bbmle::mle2 function. fun_prior optional function takes vector parameters list hyperparameters compute prior parameters. Allows penalized maximum likelihood estimation.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_fit_models_using_mle2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit Delay Discounting Models via Maximum Likelihood — ddabcd_fit_models_using_mle2","text":"list bbmle::mle2 output null model, Mazur's (1987) model, Rachlin's (2006) model.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_fit_models_using_mle2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit Delay Discounting Models via Maximum Likelihood — ddabcd_fit_models_using_mle2","text":"Mazur, J. E. (1987). adjusting procedure studying delayed reinforcement. M. L. Commons, J. E. Mazur, J. . Nevin, & H. Rachlin (Eds.), effect delay intervening events reinforcement value (pp. 55-73). Lawrence Erlbaum Associates, Inc. Rachlin, H. (2006). Notes discounting. Journal Experimental Analysis Behavior, 85 (3), 425-435. https://doi.org/10.1901/jeab.2006.85-05","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_fit_models_using_mle2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Delay Discounting Models via Maximum Likelihood — ddabcd_fit_models_using_mle2","text":"","code":"# Example data set data(ddabcd_data_example_long) # Take data from 1st participant dtf_delay <- ddabcd_data_example_long[1:7, ]  # Fit simulated data for 1st participant in example data set lst_fit.mle2 <- ddabcd_fit_models_using_mle2(   dtf_delay, 'Beta', control = list( maxit = 2e4 ) )"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_fit_models_using_nls.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Delay Discounting Models via Non-Linear Least Squares — ddabcd_fit_models_using_nls","title":"Fit Delay Discounting Models via Non-Linear Least Squares — ddabcd_fit_models_using_nls","text":"Fits several delay discounting models long-form data set using R's built-function stats::nls. approach originally used Kohler et al. (2022) fit Mazur's (1987) model delay discounting data ABCD study.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_fit_models_using_nls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Delay Discounting Models via Non-Linear Least Squares — ddabcd_fit_models_using_nls","text":"","code":"ddabcd_fit_models_using_nls(   dtf_data,   chr_outcome = \"ddabcd_indifference_score_1\",   chr_log_delay = \"ddabcd_delay_log_months\",   num_scaling = 1,   lst_start = NULL,   lgc_warnings = FALSE,   lst_control = list(maxit = 20000),   ... )"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_fit_models_using_nls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Delay Discounting Models via Non-Linear Least Squares — ddabcd_fit_models_using_nls","text":"dtf_data data frame separate rows delay duration participant. Must column log delay durations. chr_outcome character string, column name indifference scores fit. chr_log_delay character string, column name log delay durations. num_scaling scaling constant (numerator Mazur Rachlin models). Typically maximum possible indifference score. lst_start named list consisting elements 'Null', 'M1987', 'R2006'. list element named vector starting values parameter estimates ('a0' lst_start$Null, 'lnk' lst_start$M1987, 'lnk' 's' lst_start$R2006). lgc_warnings Logical; TRUE displays warning estimations failed. lst_control list control settings stats::nls. ... Additional parameters stats::nls.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_fit_models_using_nls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit Delay Discounting Models via Non-Linear Least Squares — ddabcd_fit_models_using_nls","text":"list stats::nls output null model, Mazur's (1987) model, Rachlin's (2006) model.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_fit_models_using_nls.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit Delay Discounting Models via Non-Linear Least Squares — ddabcd_fit_models_using_nls","text":"Kohler, R. J., Lichenstein, S. D., & Yip, S. W. (2022). Hyperbolic discounting rates risk problematic alcohol use youth enrolled Adolescent Brain Cognitive Development study. Addiction Biology, 27 (2), 1-13. https://doi.org/10.1111/adb.13160 Mazur, J. E. (1987). adjusting procedure studying delayed reinforcement. M. L. Commons, J. E. Mazur, J. . Nevin, & H. Rachlin (Eds.), effect delay intervening events reinforcement value (pp. 55-73). Lawrence Erlbaum Associates, Inc. Rachlin, H. (2006). Notes discounting. Journal Experimental Analysis Behavior, 85 (3), 425-435. https://doi.org/10.1901/jeab.2006.85-05","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_fit_models_using_nls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Delay Discounting Models via Non-Linear Least Squares — ddabcd_fit_models_using_nls","text":"","code":"# Example data set data(ddabcd_data_example_long) # Take data from 1st participant dtf_delay <- ddabcd_data_example_long[1:7, ]  # Fit simulated data for 1st participant in example data set lst_fits.nls <- ddabcd_fit_models_using_nls(   dtf_delay )"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_fit_models_using_tl_mle2.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Delay Discounting Models via Maximum Tobit Likelihood — ddabcd_fit_models_using_tl_mle2","title":"Fit Delay Discounting Models via Maximum Tobit Likelihood — ddabcd_fit_models_using_tl_mle2","text":"Fits several delay discounting models long-form data set using bbmle::mle2 function 'bbmle' package tobit likelihood function (CITATION) deal censored data.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_fit_models_using_tl_mle2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Delay Discounting Models via Maximum Tobit Likelihood — ddabcd_fit_models_using_tl_mle2","text":"","code":"ddabcd_fit_models_using_tl_mle2(   dtf_data,   chr_outcome = \"ddabcd_indifference_score_log_odds\",   chr_minus_log_delay = \"ddabcd_delay_negative_log_months\",   chr_censored = \"ddabcd_indifference_score_censored\",   num_limits = NULL,   lst_priors = NULL,   fun_priors = NULL,   lst_start = NULL,   lgc_warnings = FALSE,   ... )"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_fit_models_using_tl_mle2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Delay Discounting Models via Maximum Tobit Likelihood — ddabcd_fit_models_using_tl_mle2","text":"dtf_data data frame separate rows delay duration participant. Must column log delay durations. chr_outcome character string, column name log-odds indifference scores fit. chr_minus_log_delay character string, column name log delay durations. chr_censored character string, column name indicator censored data. num_limits numeric vector lower upper limits data censored. lst_priors optional named list vectors specifying hyperparameters prior parameter. lst_start named list consisting elements 'Null', 'M1987', 'R2006'. list element named vector starting values parameter estimates ('lnd' models, 'a0' lst_start$Null, 'nlnk' lst_start$M1987, 'nlnk' 's' lst_start$R2006). lgc_warnings Logical; TRUE displays warning estimations failed. ... Additional parameters bbmle::mle2 function. fun_prior optional function takes vector parameters list hyperparameters compute prior parameters. Allows penalized maximum likelihood estimation.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_fit_models_using_tl_mle2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit Delay Discounting Models via Maximum Tobit Likelihood — ddabcd_fit_models_using_tl_mle2","text":"list bbmle::mle2 output null model, Mazur's (1987) model, Rachlin's (2006) model.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_fit_models_using_tl_mle2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit Delay Discounting Models via Maximum Tobit Likelihood — ddabcd_fit_models_using_tl_mle2","text":"Mazur, J. E. (1987). adjusting procedure studying delayed reinforcement. M. L. Commons, J. E. Mazur, J. . Nevin, & H. Rachlin (Eds.), effect delay intervening events reinforcement value (pp. 55-73). Lawrence Erlbaum Associates, Inc. Rachlin, H. (2006). Notes discounting. Journal Experimental Analysis Behavior, 85 (3), 425-435. https://doi.org/10.1901/jeab.2006.85-05","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_fit_models_using_tl_mle2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Delay Discounting Models via Maximum Tobit Likelihood — ddabcd_fit_models_using_tl_mle2","text":"","code":"# Example data set data(ddabcd_data_example_long) # Take data from 1st participant dtf_delay <- ddabcd_data_example_long[1:7, ]  # Fit simulated data for 1st participant in example data set lst_fit.mle2 <- ddabcd_fit_models_using_tl_mle2(   dtf_delay, control = list( maxit = 2e4 ) )"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_model_distributions.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine Model Distribution — ddabcd_model_distributions","title":"Determine Model Distribution — ddabcd_model_distributions","text":"Function returns logical vector indicating whether normal, beta, logit-normal distribution used modeling purposes. Primarily internal use estimation functions.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_model_distributions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine Model Distribution — ddabcd_model_distributions","text":"","code":"ddabcd_model_distributions(chr_distribution)"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_model_distributions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine Model Distribution — ddabcd_model_distributions","text":"chr_distribution character string, name distribution use.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_model_distributions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine Model Distribution — ddabcd_model_distributions","text":"named logical vector value corresponding distribution equal TRUE.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_model_distributions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine Model Distribution — ddabcd_model_distributions","text":"","code":"ddabcd_model_distributions('Beta') #>      Normal        Beta Logitnormal  #>       FALSE        TRUE       FALSE"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_model_predictions.html","id":null,"dir":"Reference","previous_headings":"","what":"Predictions and Simulations From Delay Discounting Models — ddabcd_model_predictions","title":"Predictions and Simulations From Delay Discounting Models — ddabcd_model_predictions","text":"Generates predicted simulated indifference scores different delay discounting models. Supported models intercept-model, 2) Mazur's (1987) model, Rachlin's (2006) model.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_model_predictions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predictions and Simulations From Delay Discounting Models — ddabcd_model_predictions","text":"","code":"ddabcd_model_predictions(   num_param,   num_delay,   chr_distribution = \"Normal\",   lgc_logit = FALSE,   num_scaling = 1 )"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_model_predictions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predictions and Simulations From Delay Discounting Models — ddabcd_model_predictions","text":"num_param named numeric vector parameter values. Parameter names can b0 intercept-model, a0 intercept-model (logit-scale), k discounting parameter, lnk log discounting parameter, nlnk negative log discounting parameter, s sensitivity parameter (Rachlin, 2006), d dispersion parameter, lnd log dispersion parameter. d lnd provided, function generates random deviates model, otherwise produces model predictions. interpretation d lnd depend specification chr_error. num_delay numeric vector delay durations (num_param['k']), log delay durations (num_param['lnk']), minus log durations (num_param['nlnk']). lgc_logit Logical; TRUE num_scaling numeric value, rescales results lgc_logit FALSE. chr_error distribution dispersion around model predictions. Options 'Normal', 'Beta', 'Logit-normal'.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_model_predictions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predictions and Simulations From Delay Discounting Models — ddabcd_model_predictions","text":"vector predicted simulated indifference scores.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_model_predictions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Predictions and Simulations From Delay Discounting Models — ddabcd_model_predictions","text":"indifference score scaled (0 - 1), Mazur's (1987) model = 1/(1 + kdelay). Rachlin's (2006) model = 1/(1 + k(delay^s)). Mazur's model therefore special case Rachlin's s = 1. models can rewritten linear equation logit-scale: logit() = -ln(k) - ln(delay)*s.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_model_predictions.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Predictions and Simulations From Delay Discounting Models — ddabcd_model_predictions","text":"Mazur, J. E. (1987). adjusting procedure studying delayed reinforcement. M. L. Commons, J. E. Mazur, J. . Nevin, & H. Rachlin (Eds.), effect delay intervening events reinforcement value (pp. 55-73). Lawrence Erlbaum Associates, Inc. Rachlin, H. (2006). Notes discounting. Journal Experimental Analysis Behavior, 85 (3), 425-435. https://doi.org/10.1901/jeab.2006.85-05","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_model_predictions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predictions and Simulations From Delay Discounting Models — ddabcd_model_predictions","text":"","code":"# Delay duration in months x <- c( 1, 3, 12 )  # Mazur's (1987) model k <- 0.14 # Predictions given different parameterizations ddabcd_model_predictions( c( k = k ), x ) #> [1] 0.8771930 0.7042254 0.3731343 ddabcd_model_predictions( c( lnk = log(k) ), log(x) ) #> [1] 0.8771930 0.7042254 0.3731343 ddabcd_model_predictions( c( nlnk = -log(k) ), -log(x) ) #> [1] 0.8771930 0.7042254 0.3731343  # Rachlin's (2006) model s = .60 ddabcd_model_predictions( c( k = k, s = s ), x ) #> [1] 0.8771930 0.7870016 0.6166064 ddabcd_model_predictions( c( lnk = log(k), s = s ), log(x) ) #> [1] 0.8771930 0.7870016 0.6166064 ddabcd_model_predictions( c( nlnk = -log(k), s = s ), -log(x) ) #> [1] 0.8771930 0.7870016 0.6166064  # Random deviates # Normal model ddabcd_model_predictions(   c( k = k, d = .3 ), x, chr_distribution = 'Normal' ) #> [1] 0.8805694 0.9762806 0.6566568 # Beta model ddabcd_model_predictions(   c( k = k, d = 4 ), x, chr_distribution = 'Beta' ) #> [1] 0.3795726 0.7548852 0.7385509 # Logit-normal model ddabcd_model_predictions(   c( k = k, d = 0.3 ), x, chr_distribution = 'Logit-normal' ) #> [1] 0.7676126 0.7232332 0.4505164"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_plot_multi_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Delay Discounting Data (Multiple Panels) — ddabcd_plot_multi_panel","title":"Plot Delay Discounting Data (Multiple Panels) — ddabcd_plot_multi_panel","text":"Function plot delay discounting data (typically log delay durations months indifference scores proportions) across multiple participants multi-panel figure.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_plot_multi_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Delay Discounting Data (Multiple Panels) — ddabcd_plot_multi_panel","text":"","code":"ddabcd_plot_multi_panel(   obj_data,   chr_participant = \"src_subject_id\",   int_panels = 9,   num_dim = c(width = 9, height = 9),   num_margin = c(3.35, 3.35, 1, 1),   chr_xlab = \"ln(Delay)\",   chr_ylab = \"Indifference score\",   num_line = c(-1.1, -1.1),   lgc_new = FALSE,   ... )"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_plot_multi_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Delay Discounting Data (Multiple Panels) — ddabcd_plot_multi_panel","text":"obj_data Either data frame list lists model fits (see ddabcd_fit_models_across_participants). chr_participant character string, column name participant's identifier. int_panels integer value, total number panels plot single window (preferably value whose square root whole number). num_dim numeric vector specifying width height plot panel new plotting window generated. num_margin numeric vector 4 values giving margin sizes bottom, left, top, right edges figure. chr_xlab character string, x-axis label. chr_ylab character string, y-axis label. num_line numeric vector two values controling positions x y-axis labels respectively. lgc_new Logical; TRUE generates new plotting window. ... Additional parameters ddabcd_plot_single_panel function.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_plot_multi_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Delay Discounting Data (Multiple Panels) — ddabcd_plot_multi_panel","text":"plot.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_plot_multi_panel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Delay Discounting Data (Multiple Panels) — ddabcd_plot_multi_panel","text":"","code":"if (FALSE) { # Example data data(\"ddabcd_data_example_long\") dtf_long <- ddabcd_data_example_long %index% list(1, 'eventname') # Plot data for 9 participants taken at random int_participants <- sample( 1:48, size = 9 ) ddabcd_plot_multi_panel(   dtf_long %index% int_participants )  # Fit data for 9 participants lst_all_fits.nls <- ddabcd_fit_models_across_participants(   dtf_long, ddabcd_fit_models_using_nls, lgc_progress = FALSE ) ddabcd_plot_multi_panel(   lst_all_fits.nls ) }"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_plot_single_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Delay Discounting Data (Single Panel) — ddabcd_plot_single_panel","title":"Plot Delay Discounting Data (Single Panel) — ddabcd_plot_single_panel","text":"Function plot delay discounting data (typically log delay durations months indifference scores proportions) single panel figure.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_plot_single_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Delay Discounting Data (Single Panel) — ddabcd_plot_single_panel","text":"","code":"ddabcd_plot_single_panel(   obj_data,   obj_x = \"ddabcd_delay_log_months\",   obj_y = \"ddabcd_indifference_score_1\",   chr_xlab = \"log(Delay - months)\",   chr_ylab = \"Indifference score (Proportion)\",   num_xlim = NULL,   num_ylim = c(0, 1),   num_dim = c(width = 5, height = 5),   int_pch = 19,   num_lwd = 2,   num_cex.pt = 1,   chr_color = c(\"black\", \"black\", \"blue\", \"grey\"),   num_jitter = 0,   chr_model = \"M1987\",   num_margin = c(4, 4, 2, 0.5),   lst_predicted = NULL,   lgc_add = FALSE,   lgc_new = FALSE,   lst_prediction_settings = NULL,   ... )"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_plot_single_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Delay Discounting Data (Single Panel) — ddabcd_plot_single_panel","text":"obj_data Either data frame list model fits (see example ddabcd_fit_models_using_nls). obj_x Either character vector column(s) index x-axis values numeric vector. obj_y Either character vector column(s) index y-axis values numeric vector. chr_xlab character string, x-axis label. chr_ylab character string, y-axis label. num_xlim optional numeric vector lower upper limits x-axis. num_ylim numeric vector lower upper limits y-axis. Default (0, 1). num_dim numeric vector specifying width height plot panel new plotting window generated. int_pch type point draw. num_lwd numeric value, width line. num_cex.pt numeric value, size point. chr_color character vector giving colors use 1) line observed data, 2) points observed data, 3) line predicted data, 4) error bars predicted data. num_jitter optional numeric value specifying limits random uniform jitter noise add points. chr_model character string, model extract results obj_data list model fits. Options include 'Null', 'M1987', 'R2006'. num_margin numeric vector 4 values giving margin sizes bottom, left, top, right edges figure. lst_predicted list either 1 3 elements specifying either columns numeric values use [[1]] model predictions [[2]] [[3]] lower upper boundaries prediction interval. lgc_add Logical; TRUE adds new data existing figure. lgc_new Logical; TRUE generates new plotting window. lst_prediction_settings optional named list specifying prediction intervals calculated model fit object provided. list contain lst_prediction_settings$width width prediction interval, lst_prediction_settings$bootstrap set TRUE using parametric bootstrap FALSE otherwise, lst_prediction_settings$samples number samples draw parametric bootstrap. ... Additional parameters base::plot function.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_plot_single_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Delay Discounting Data (Single Panel) — ddabcd_plot_single_panel","text":"plot.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_plot_single_panel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Delay Discounting Data (Single Panel) — ddabcd_plot_single_panel","text":"","code":"if (FALSE) { # Load in example data sets data( ddabcd_data_example_wide ) data( ddabcd_data_example_long ) dtf_wide <- ddabcd_data_example_wide %index% list( 1, 'eventname' ) dtf_long <- ddabcd_data_example_long %index% list( 1, 'eventname' )  # By default data assumed to be long-form ddabcd_plot_single_panel( dtf_long %index% 1 ) # 1st participant # Wide-form data can be plotted by providing vector of column names ddabcd_plot_single_panel(   dtf_wide %index% 1, # 1st participant   obj_x = ddabcd_data_delay_durations(),   colnames( dtf_wide %col% 'indif' ),   num_ylim = c( 0, 100 ) )  # Example using model fits for first participant lst_fits.nls <- ddabcd_fit_models_using_nls( dtf_long %index% 1) ddabcd_plot_single_panel( lst_fits.nls, chr_model = 'M1987' ) # Add predictions for Rachlin's (2006) model ddabcd_plot_single_panel(   lst_fits.nls, chr_model = 'R2006',   chr_color = c('black', 'black', 'red' ), lgc_add = TRUE ) }"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_post_fit_add_to_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Extracted Elements From Model Fit to Data — ddabcd_post_fit_add_to_data","title":"Add Extracted Elements From Model Fit to Data — ddabcd_post_fit_add_to_data","text":"Function extract elements list model fits different participants add data frame.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_post_fit_add_to_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Extracted Elements From Model Fit to Data — ddabcd_post_fit_add_to_data","text":"","code":"ddabcd_post_fit_add_to_data(   dtf_data,   lst_all_fits,   chr_column,   lgc_filtering = NULL,   num_default = NA,   chr_participant = \"src_subject_id\",   ... )"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_post_fit_add_to_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Extracted Elements From Model Fit to Data — ddabcd_post_fit_add_to_data","text":"dtf_data data frame. Must contain column specified chr_participant. lst_all_fits list model fits per participant (see ddabcd_fit_models_across_participants). chr_column character string, column either add update dtf_data. lgc_filtering logical vector matching length number rows dtf_data specifying subset rows update. num_default default value use elements extracted lst_all_fits. chr_participant character string, column name participant IDs match across dtf_data lst_all_fits. ... Additional parameters ddabcd_post_fit_extract function.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_post_fit_add_to_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Extracted Elements From Model Fit to Data — ddabcd_post_fit_add_to_data","text":"data frame, dtf_data updated column.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_post_fit_add_to_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Extracted Elements From Model Fit to Data — ddabcd_post_fit_add_to_data","text":"","code":"# Example data data(ddabcd_data_example_wide) # Use data for first time point and first 3 participants dtf_wide <- ddabcd_data_example_wide %index% 1:3 dtf_wide <- dtf_wide %index% list( 1, 'eventname' ) # Create long-form data dtf_long <- ddabcd_data_prep( dtf_wide ) #> Error in loadNamespace(x): there is no package called ‘Kendall’  # Fit data using 'nls' lst_all_fits.nls <- ddabcd_fit_models_across_participants(   dtf_long, ddabcd_fit_models_using_nls, lgc_progress = FALSE ) #> Error in eval(expr, envir, enclos): object 'dtf_long' not found  # Add estimate of log discounting to wide-form data set dtf_wide <- ddabcd_post_fit_add_to_data(   dtf_wide, lst_all_fits.nls, 'ddabcd_estimates_M1987_nls.lnk' ) #> Error in eval(expr, envir, enclos): object 'lst_all_fits.nls' not found # Add estimate of log discounting to wide-form data set # for Rachlin's (2006) model dtf_wide <- ddabcd_post_fit_add_to_data(   dtf_wide, lst_all_fits.nls, 'ddabcd_estimates_R2006_nls.lnk',   fun_extract = function(l) coef(l)['lnk'],   chr_model = 'R2006' ) #> Error in eval(expr, envir, enclos): object 'lst_all_fits.nls' not found # Add estimate of sensitivity to wide-form data set # for Rachlin's (2006) model dtf_wide <- ddabcd_post_fit_add_to_data(   dtf_wide, lst_all_fits.nls, 'ddabcd_estimates_R2006_nls.s',   fun_extract = function(l) coef(l)['s'],   chr_model = 'R2006' ) #> Error in eval(expr, envir, enclos): object 'lst_all_fits.nls' not found"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_post_fit_attr.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract 'ddabcd_attr' Component — ddabcd_post_fit_attr","title":"Extract 'ddabcd_attr' Component — ddabcd_post_fit_attr","text":"Utility function extract elements 'ddabcd_attr' component attributes model fits ddabcd_fit_models_using_nls ddabcd_fit_models_using_mle2.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_post_fit_attr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract 'ddabcd_attr' Component — ddabcd_post_fit_attr","text":"","code":"ddabcd_post_fit_attr(obj_fit, chr_attr = \"\", obj_default = NA)"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_post_fit_attr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract 'ddabcd_attr' Component — ddabcd_post_fit_attr","text":"obj_fit R object model fit results. chr_attr character string, specific attribute access. Options include 'predicted', 'residuals', 'rmse', 'loglikelihood', 'AIC', 'BIC', 'nobs', 'dof'. obj_default Value return attributes found.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_post_fit_attr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract 'ddabcd_attr' Component — ddabcd_post_fit_attr","text":"list elements specific element 'ddabcd_attr' attribute.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_post_fit_attr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract 'ddabcd_attr' Component — ddabcd_post_fit_attr","text":"","code":"# Example data data(ddabcd_data_example_long) # Use data for first time point and first 3 participants dtf_long <- ddabcd_data_example_long %index% 1:3 dtf_long <- dtf_long %index% list( 1, 'eventname' )  # Fit data using 'nls' lst_all_fits.nls <- ddabcd_fit_models_across_participants(   dtf_long, ddabcd_fit_models_using_nls, lgc_progress = FALSE )  ddabcd_post_fit_attr( lst_all_fits.nls[[1]]$M1987 )['rmse'] #> $rmse #> [1] 0.1649162 #>"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_post_fit_compute_rmse.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Root-Mean-Square-Error (RMSE) — ddabcd_post_fit_compute_rmse","title":"Compute Root-Mean-Square-Error (RMSE) — ddabcd_post_fit_compute_rmse","text":"Given set predicted observed values, computes root-mean-square-error (also known root-mean-square-deviation). Note predicted values must scale observed values.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_post_fit_compute_rmse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Root-Mean-Square-Error (RMSE) — ddabcd_post_fit_compute_rmse","text":"","code":"ddabcd_post_fit_compute_rmse(num_predicted, num_observed)"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_post_fit_compute_rmse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Root-Mean-Square-Error (RMSE) — ddabcd_post_fit_compute_rmse","text":"num_predicted numeric vector matching length num_observed. num_observed numeric vector matching length num_predicted.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_post_fit_compute_rmse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Root-Mean-Square-Error (RMSE) — ddabcd_post_fit_compute_rmse","text":"numeric value, RMSE.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_post_fit_compute_rmse.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Root-Mean-Square-Error (RMSE) — ddabcd_post_fit_compute_rmse","text":"Given n predicted values p observed values o, RMSE computed sqrt( sum( (p - o)^2 )/n ).","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_post_fit_compute_rmse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Root-Mean-Square-Error (RMSE) — ddabcd_post_fit_compute_rmse","text":"","code":"# Example using 'lm' set.seed( 20230517 ) # For reproducibility dtf_data <- data.frame( x = rnorm(30) ) dtf_data$y <- dtf_data$x * .5 + rnorm(30) lst_lm <- lm( y ~ x, data = dtf_data) # Compute RMSE ddabcd_post_fit_compute_rmse(   predict(lst_lm), dtf_data$y ) #> [1] 0.7121422 # Equivalent to... sqrt( mean( residuals(lst_lm)^2 ) ) #> [1] 0.7121422"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_post_fit_convergence.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if Models Converged — ddabcd_post_fit_convergence","title":"Check if Models Converged — ddabcd_post_fit_convergence","text":"Function iterate model fits across participants check model convergence.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_post_fit_convergence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if Models Converged — ddabcd_post_fit_convergence","text":"","code":"ddabcd_post_fit_convergence(lst_all_fits, chr_model = \"M1987\")"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_post_fit_convergence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if Models Converged — ddabcd_post_fit_convergence","text":"lst_all_fits list lists model fits. chr_model character string, specific model elements extracted. Options include 'Null', 'M1987', 'R2006'.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_post_fit_convergence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if Models Converged — ddabcd_post_fit_convergence","text":"logical vector equal TRUE models converged, FALSE otherwise.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_post_fit_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Elements From List of Model Fits — ddabcd_post_fit_extract","title":"Extract Elements From List of Model Fits — ddabcd_post_fit_extract","text":"Function extract specified element (e.g., parameter estimate) list lists model fits (see ddabcd_fit_models_across_participants example).","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_post_fit_extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Elements From List of Model Fits — ddabcd_post_fit_extract","text":"","code":"ddabcd_post_fit_extract(   lst_all_fits,   fun_extract = NULL,   chr_model = \"M1987\",   ... )"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_post_fit_extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Elements From List of Model Fits — ddabcd_post_fit_extract","text":"lst_all_fits list lists model fits. fun_extract function extracts specified element model fit (defaults coef function). chr_model character string, specific model elements extracted. Options include 'Null', 'M1987', 'R2006'. ... Additional arguments fun_extract function.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_post_fit_extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Elements From List of Model Fits — ddabcd_post_fit_extract","text":"Output sapply function applying fun_extract element lst_all_fits.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_post_fit_if_success.html","id":null,"dir":"Reference","previous_headings":"","what":"Call Function on Successful Model Fit — ddabcd_post_fit_if_success","title":"Call Function on Successful Model Fit — ddabcd_post_fit_if_success","text":"Applies specified function model fit object estimation succeeded.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_post_fit_if_success.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Call Function on Successful Model Fit — ddabcd_post_fit_if_success","text":"","code":"ddabcd_post_fit_if_success(obj_fit, fun_call, obj_default = NA, ...)"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_post_fit_if_success.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Call Function on Successful Model Fit — ddabcd_post_fit_if_success","text":"obj_fit R object model fit results. fun_call function apply obj_fit. obj_default output obj_fit character string (.e., estimation failed). ... Additional parameters fun_call.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_post_fit_if_success.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Call Function on Successful Model Fit — ddabcd_post_fit_if_success","text":"results fun_call, obj_fit character string, obj_default instead.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_post_fit_if_success.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Call Function on Successful Model Fit — ddabcd_post_fit_if_success","text":"","code":"# Example data data(ddabcd_data_example_long) # Fit first time point and first and last participant dtf_long <- ddabcd_data_example_long %index% c( 1, 48 ) dtf_long <- dtf_long %index% list( 1, 'eventname' )  # Fit data using 'nls' lst_all_fits.nls <- ddabcd_fit_models_across_participants(   dtf_long, ddabcd_fit_models_using_nls, lgc_progress = FALSE )  # Estimation fails for Rachlin's (2006) model for last subject # due to no variation in data to identify 2nd parameter sapply( 1:2, function(i) {   ddabcd_post_fit_if_success(     lst_all_fits.nls[[i]]$R2006, return(TRUE), FALSE ) } ) #> [1]  TRUE FALSE"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_post_fit_prediction_intervals.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Prediction Intervals — ddabcd_post_fit_prediction_intervals","title":"Compute Prediction Intervals — ddabcd_post_fit_prediction_intervals","text":"Compute prediction intervals delayed discounting model fit. Users can either compute interval using model parameter point estimates, incorporate uncertainty parameter estimates prediction interval via parametric bootstrap approach.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_post_fit_prediction_intervals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Prediction Intervals — ddabcd_post_fit_prediction_intervals","text":"","code":"ddabcd_post_fit_prediction_intervals(   obj_fit,   num_width = 0.95,   lgc_bootstrap = FALSE,   int_samples = 1000,   num_limits = NULL,   lgc_suppress_error = FALSE,   ... )"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_post_fit_prediction_intervals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Prediction Intervals — ddabcd_post_fit_prediction_intervals","text":"obj_fit R object model fit results. num_width numeric value 0 1 specifying width prediction interval. lgc_bootstrap Logical; TRUE computes prediction intervals via parametric bootstrap approach incorporates uncertainty model parameters. int_samples integer value, number samples use parameter bootstrap (higher values lead less Monte Carlo error approximation longer computation times). num_limits optional numeric vector giving lower upper limits simulated predictions censored. lgc_suppress_error Logical; TRUE function produce error parameter bootstrap computed. ... Additional parameters ddabcd_model_predictions function.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_post_fit_prediction_intervals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Prediction Intervals — ddabcd_post_fit_prediction_intervals","text":"2xN matrix whose rows give lower upper prediction limits N data points, respectively.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_post_fit_prediction_intervals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Prediction Intervals — ddabcd_post_fit_prediction_intervals","text":"","code":"# Example data data(\"ddabcd_data_example_long\") dtf_long <- ddabcd_data_example_long %index% 1 dtf_long <- dtf_long %index% list( 1, 'eventname' )  lst_fits.nls <- ddabcd_fit_models_using_nls( dtf_long ) lst_fits.mle2 <- ddabcd_fit_models_using_mle2(   dtf_long, chr_distribution = 'Logit-normal' )  # Prediction intervals using point estimates ddabcd_post_fit_prediction_intervals( lst_fits.nls$M1987 ) |> round(2) #>      [,1] [,2] [,3] [,4] [,5] [,6]  [,7] #> [1,] 0.65 0.65 0.64 0.59 0.48 0.20 -0.16 #> [2,] 1.35 1.35 1.33 1.28 1.18 0.89  0.54 ddabcd_post_fit_prediction_intervals( lst_fits.mle2$M1987 ) |> round(2) #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] #> [1,] 0.04 0.04 0.04 0.03 0.02 0.02 0.02 #> [2,] 0.99 0.99 0.99 0.99 0.99 0.99 0.99  # Bootstrapped prediction intervals ddabcd_post_fit_prediction_intervals(   lst_fits.mle2$M1987,   lgc_bootstrap = TRUE ) |> round(2) #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] #> 2.5%  0.76 0.41 0.12 0.01 0.01 0.00 0.00 #> 97.5% 1.00 1.00 1.00 1.00 0.99 0.95 0.78"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_post_fit_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Brief Report on Delay Discounting Model Fit — ddabcd_post_fit_report","title":"Brief Report on Delay Discounting Model Fit — ddabcd_post_fit_report","text":"Function provides summary () number participants models successfully fit, (b) means uncertainty intervals root-mean-square-error (RMSE).","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_post_fit_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Brief Report on Delay Discounting Model Fit — ddabcd_post_fit_report","text":"","code":"ddabcd_post_fit_report(lst_all_fits)"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_post_fit_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Brief Report on Delay Discounting Model Fit — ddabcd_post_fit_report","text":"lst_all_fits list lists model fits (see dabcd_fit_models_across_participants).","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_post_fit_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Brief Report on Delay Discounting Model Fit — ddabcd_post_fit_report","text":"message console.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_post_fit_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Brief Report on Delay Discounting Model Fit — ddabcd_post_fit_report","text":"","code":"# Example data data(ddabcd_data_example_long) # Fit first time point and first 3 participants dtf_long <- ddabcd_data_example_long %index% 1:4 dtf_long <- dtf_long %index% list( 1, 'eventname' ) lst_all_fits.nls <- ddabcd_fit_models_across_participants(   dtf_long, ddabcd_fit_models_using_nls, lgc_progress = FALSE )  ddabcd_post_fit_report( lst_all_fits.nls ) #> Model:  Null #>   Successful estimation: 4/4 (100.0%) #>   RMSE: Mean = 0.23, 95% UI = 0.15 to 0.31 #>  #> Model: M1987 #>   Successful estimation: 4/4 (100.0%) #>   RMSE: Mean = 0.12, 95% UI = 0.06 to 0.17 #>  #> Model: R2006 #>   Successful estimation: 4/4 (100.0%) #>   RMSE: Mean = 0.06, 95% UI = 0.04 to 0.08 #>"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_post_fit_sample_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw Samples For Parameter Estimates — ddabcd_post_fit_sample_parameters","title":"Draw Samples For Parameter Estimates — ddabcd_post_fit_sample_parameters","text":"Function conducts parametric bootstrap assuming parameter estimates follow multivariate normal distribution.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_post_fit_sample_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw Samples For Parameter Estimates — ddabcd_post_fit_sample_parameters","text":"","code":"ddabcd_post_fit_sample_parameters(   obj_fit,   int_samples = 1000,   lgc_suppress_error = FALSE,   chr_labels = c(\"a0\", \"lnk\", \"s\", \"lnd\") )"},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_post_fit_sample_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw Samples For Parameter Estimates — ddabcd_post_fit_sample_parameters","text":"obj_fit model fit object methods coef vcov. int_samples number samples draw multivariate normal distribution. lgc_suppress_error Logical; TRUE suppress error messages return matrix NA values instead. chr_labels column names matrix NA values samples drawn.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_post_fit_sample_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw Samples For Parameter Estimates — ddabcd_post_fit_sample_parameters","text":"matrix.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/ddabcd_post_fit_sample_parameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw Samples For Parameter Estimates — ddabcd_post_fit_sample_parameters","text":"","code":"# Example data data( ddabcd_data_example_long ) dtf_long <- ddabcd_data_example_long %index% 1 dtf_long <- dtf_long %index% list( 1, 'eventname' )  lst_fits.mle2 <- ddabcd_fit_models_using_mle2(   dtf_long, chr_distribution = 'Normal' )  ddabcd_post_fit_sample_parameters(   lst_fits.mle2$M1987, int_samples = 3 ) #>            lnk       lnd #> [1,] -2.847828 -2.065556 #> [2,] -1.869027 -1.660458 #> [3,] -3.592557 -1.645793"},{"path":"https://rettopnivek.github.io/ddabcd/reference/dlogitnorm.html","id":null,"dir":"Reference","previous_headings":"","what":"The Logit-Normal Distribution — dlogitnorm","title":"The Logit-Normal Distribution — dlogitnorm","text":"Density, distribution function, quantile function, random generation logit-normal distribution mean logit-scale equal mean standard deviation logit-scale equal sd.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/dlogitnorm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Logit-Normal Distribution — dlogitnorm","text":"","code":"dlogitnorm(x, mean, sd, log = FALSE)  plogitnorm(q, mean, sd, lower.tail = TRUE, log.p = FALSE)  qlogitnorm(p, mean, sd, lower.tail = TRUE, log.p = FALSE)  rlogitnorm(n, mean, sd)"},{"path":"https://rettopnivek.github.io/ddabcd/reference/dlogitnorm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Logit-Normal Distribution — dlogitnorm","text":"x, q Vector quantiles (0 >= x,q <= 1). mean Vector means logit-scale. log, log.p Logical; TRUE, probabilities p given log(p). lower.tail Logical; TRUE (default), probabilities P(X less equal x) otherwise, P(X greater x). p Vector probabilities n Number observations. length(n) > 1, length taken number required. prec Vector standard deviations logit-scale, sd > 0.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/dlogitnorm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Logit-Normal Distribution — dlogitnorm","text":"dlogitnorm gives density, plogitnorm gives distribution function, qlogitnorm gives quantile function, rlogitnorm generates random deviates. length result determined n rbetamp, maximum lengths numerical arguments functions.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/dlogitnorm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Logit-Normal Distribution — dlogitnorm","text":"mean sd specified assume default values 0 1. See stats::dnorm details.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/dlogitnorm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Logit-Normal Distribution — dlogitnorm","text":"","code":"x <- c(.25, .5, .75) dlogitnorm( x, 0, 1) #> [1] 0.2181848 0.3989423 0.2181848 plogitnorm( x, 0, 1) #> [1] 0.1359686 0.5000000 0.8640314 qlogitnorm( plogitnorm( x, 0, 1), 0, 1) #> [1] 0.25 0.50 0.75 rlogitnorm( 3, 0, 1) #> [1] 0.7860288 0.7136272 0.2707103"},{"path":"https://rettopnivek.github.io/ddabcd/reference/grapes-col-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Columns Matching Partial Strings — %col%","title":"Extract Columns Matching Partial Strings — %col%","text":"Convenience operator takes vector partial strings determines columns match strings. Also allows specifying elements must included excluded matching.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/grapes-col-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Columns Matching Partial Strings — %col%","text":"","code":"dtf_data %col% chr_column_parts"},{"path":"https://rettopnivek.github.io/ddabcd/reference/grapes-col-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Columns Matching Partial Strings — %col%","text":"dtf_data data frame. chr_column_parts character vector, partial strings match column names . Columns match strings returned. However, string starts '+', columns must include string. string starts '-', columns can include string. Note least one element chr_column_parts start either '+' '-'.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/grapes-col-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Columns Matching Partial Strings — %col%","text":"data frame, subset columns meeting criteria specified chr_column_parts.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/grapes-col-grapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Columns Matching Partial Strings — %col%","text":"","code":"dtf_data <- data.frame( A1 = 1:3, A2 = 4:6, B1 = 7:9, B2 = 10:12 )  # Return all columns with an 'A' dtf_data %col% 'A' #>   A1 A2 #> 1  1  4 #> 2  2  5 #> 3  3  6 # Return all columns with an 'A1' or 'B1' dtf_data %col% c( 'A1', 'B1' ) #>   A1 B1 #> 1  1  7 #> 2  2  8 #> 3  3  9 # Return columns with a '1' and either 'A' or 'B' dtf_data %col% c( '+1', 'A', 'B' ) #>   A1 B1 #> 1  1  7 #> 2  2  8 #> 3  3  9 dtf_data %col% c( '-1', 'A', 'B' ) #>   A2 B2 #> 1  4 10 #> 2  5 11 #> 3  6 12"},{"path":"https://rettopnivek.github.io/ddabcd/reference/grapes-index-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Index Rows of a Data Frame — %index%","title":"Index Rows of a Data Frame — %index%","text":"Convenience operator matches user-supplied index (either integer character string) elements data frame column returns corresponding set rows. Useful, example, isolate rows specific participant long-form data set.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/grapes-index-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Index Rows of a Data Frame — %index%","text":"","code":"dtf_data %index% obj_index"},{"path":"https://rettopnivek.github.io/ddabcd/reference/grapes-index-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Index Rows of a Data Frame — %index%","text":"dtf_data data frame. obj_index Either integer vector, character vector, list integer/character vector character string specifying column match . obj_index integer, operator uses first column dtf_data match .","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/grapes-index-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Index Rows of a Data Frame — %index%","text":"data frame, subset dtf_data successful matches.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/grapes-index-grapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Index Rows of a Data Frame — %index%","text":"","code":"# Create example data set dtf_data <- data.frame(   V1 = rep( LETTERS[1:3], each = 2 ), V2 = c( 1:3, 1:3 ) )  # Return rows for first unique element of 'V1' dtf_data %index% 1 #>   V1 V2 #> 1  A  1 #> 2  A  2 # Return rows for first unique element of 'V2' dtf_data %index% list( 1, 'V2' ) #>   V1 V2 #> 1  A  1 #> 4  B  1 # Return rows for 'V1' == 'B' dtf_data %index% 'B' #>   V1 V2 #> 3  B  3 #> 4  B  1 dtf_data %index% list( '3', 'V2' ) #>   V1 V2 #> 3  B  3 #> 6  C  3"},{"path":"https://rettopnivek.github.io/ddabcd/reference/grapes-pull_coef-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Coefficient Point Estimates — %pull_coef%","title":"Extract Coefficient Point Estimates — %pull_coef%","text":"Custom operator extract point estimates parameters R object compatible coef method.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/grapes-pull_coef-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Coefficient Point Estimates — %pull_coef%","text":"","code":"obj_fit %pull_coef% obj_param"},{"path":"https://rettopnivek.github.io/ddabcd/reference/grapes-pull_coef-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Coefficient Point Estimates — %pull_coef%","text":"obj_fit R object coef method. obj_param Either integer character vector specifying subset coef output keep.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/grapes-pull_coef-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Coefficient Point Estimates — %pull_coef%","text":"numeric vector.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/grapes-pull_coef-grapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Coefficient Point Estimates — %pull_coef%","text":"","code":"# Example using 'lm' set.seed( 20230517 ) # For reproducibility dtf_data <- data.frame( x = rnorm(30) ) dtf_data$y <- dtf_data$x * .5 + rnorm(30) lst_lm <- lm( y ~ x, data = dtf_data) lst_lm %pull_coef% '(Intercept)' #> (Intercept)  #>   0.1181947  lst_lm %pull_coef% 'x' #>         x  #> 0.4357355"},{"path":"https://rettopnivek.github.io/ddabcd/reference/grapes-transform-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Transformations to Vector of Values — %transform%","title":"Apply Transformations to Vector of Values — %transform%","text":"Operator apply specified transformation vector numeric values, logit logistic transform.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/grapes-transform-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Transformations to Vector of Values — %transform%","text":"","code":"num_values %transform% chr_transform"},{"path":"https://rettopnivek.github.io/ddabcd/reference/grapes-transform-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Transformations to Vector of Values — %transform%","text":"num_values numeric vector. chr_transform character string, transform apply. Options include 'logit', 'logistic', 'probit', 'inverse-probit'.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/grapes-transform-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Transformations to Vector of Values — %transform%","text":"numeric vector transformed values.","code":""},{"path":"https://rettopnivek.github.io/ddabcd/reference/grapes-transform-grapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply Transformations to Vector of Values — %transform%","text":"","code":"c(.25, .5, .75) %transform% 'logit' |> round(3) #> [1] -1.099  0.000  1.099 c(-1.099, 0, 1.099) %transform% 'logistic' |> round(3) #> [1] 0.25 0.50 0.75"}]
