% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ddabcd_model_functions.R
\name{ddabcd_post_fit_prediction_intervals}
\alias{ddabcd_post_fit_prediction_intervals}
\title{Compute Prediction Intervals}
\usage{
ddabcd_post_fit_prediction_intervals(
  obj_fit,
  num_width = 0.95,
  lgc_bootstrap = FALSE,
  int_samples = 1000,
  num_limits = NULL,
  lgc_suppress_error = FALSE,
  ...
)
}
\arguments{
\item{obj_fit}{An R object for model fit results.}

\item{num_width}{A numeric value between 0 and 1
specifying the width of the prediction interval.}

\item{lgc_bootstrap}{Logical; if \code{TRUE}
computes prediction intervals via a parametric
bootstrap approach that incorporates uncertainty
in model parameters.}

\item{int_samples}{An integer value, the number of
samples to use for the parameter bootstrap
(higher values lead to less Monte Carlo error of
approximation but longer computation times).}

\item{num_limits}{An optional numeric vector giving
the lower and upper limits below and above which
simulated predictions should be censored.}

\item{lgc_suppress_error}{Logical; if \code{TRUE}
function does not produce an error when the
parameter bootstrap cannot be computed.}

\item{...}{Additional parameters for the
\link{ddabcd_model_predictions} function.}
}
\value{
A 2xN matrix whose rows give the lower
and upper prediction limits for the N data points,
respectively.
}
\description{
Compute prediction intervals for delayed discounting
model fit. Users can either compute the interval
using model parameter point estimates, or incorporate
uncertainty in parameter estimates in the prediction
interval via a parametric bootstrap approach.
}
\examples{
# Example data
data("ddabcd_data_example_long")
dtf_long <- ddabcd_data_example_long \%index\% 1
dtf_long <- dtf_long \%index\% list( 1, 'eventname' )

lst_fits.nls <- ddabcd_fit_models_using_nls( dtf_long )
lst_fits.mle2 <- ddabcd_fit_models_using_mle2(
  dtf_long, chr_distribution = 'Logit-normal'
)

# Prediction intervals using point estimates
ddabcd_post_fit_prediction_intervals( lst_fits.nls$M1987 ) |> round(2)
ddabcd_post_fit_prediction_intervals( lst_fits.mle2$M1987 ) |> round(2)

# Bootstrapped prediction intervals
ddabcd_post_fit_prediction_intervals(
  lst_fits.mle2$M1987,
  lgc_bootstrap = TRUE
) |> round(2)

}
